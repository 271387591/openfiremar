<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozstrategy.dao.project.ProjectUserDao">
    <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->
    <resultMap id="ProjectUserResult" type="com.ozstrategy.model.project.ProjectUser" autoMapping="true">
        <id column="id" property="id" javaType="long"/>
        <association property="user" select="com.ozstrategy.dao.userrole.UserDao.getNoCascadeUserById" column="userId" javaType="com.ozstrategy.model.userrole.User"/>
        <association property="project" select="com.ozstrategy.dao.project.ProjectDao.getNoCascadeProjectById" column="projectId" javaType="com.ozstrategy.model.project.Project"/>
    </resultMap>
    
    <select id="listProjectUserByUserId" resultMap="ProjectUserResult" parameterType="long">
        select * from ext_project_user u where u.userId=#{userId} 
    </select>
    <select id="listProjectUserByProjectId" resultMap="ProjectUserResult" parameterType="long">
        select * from ext_project_user u where u.projectId=#{projectId} 
    </select>
    
    <select id="listUsersByProjectId" parameterType="long" resultMap="com.ozstrategy.dao.userrole.UserDao.userResult">
        select u.* from ext_user u join ext_project_user pu on u.id=pu.userId where pu.projectId=#{projectId}
    </select>
    <select id="listUsersByProjectIdCount" parameterType="long" resultType="int">
        select count(*) from ext_user u join ext_project_user pu on u.id=pu.userId where pu.projectId=#{projectId}
    </select>
    
    <update id="updateManager" parameterType="Map">
        update ext_project_user set manager=#{manager} where userId=#{userId} and projectId=#{projectId}
    </update>
    
    
    
    <select id="listProjectByUserId" resultType="com.ozstrategy.model.project.Project" parameterType="long">
        select f.* from ext_project f  join ext_project_user u on f.id=u.userId where u.userId=#{userId}
    </select>
    <select id="listUserByProjectId" resultType="com.ozstrategy.model.userrole.User" parameterType="long">
        select u.* from ext_user u  join ext_project_user f on u.id=f.userId where f.projectId=#{projectId}
    </select>
    <insert id="save" flushCache="true" parameterType="com.ozstrategy.model.project.ProjectUser">
        <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        insert ext_project_user(id,userId,projectId,manager) values(#{id},#{user.id},#{project.id},#{manager})
    </insert>
    <delete id="removeByUserId" parameterType="long" flushCache="true">
        delete from ext_project_user where userId=#{userId} 
    </delete>
    <delete id="removeByProjectId" parameterType="long" flushCache="true">
        delete from ext_project_user where projectId=#{projectId} 
    </delete>
    <delete id="removeUser" parameterType="Map" flushCache="true">
        delete from ext_project_user where projectId=#{projectId} and userId=#{userId}
    </delete>
    
</mapper>
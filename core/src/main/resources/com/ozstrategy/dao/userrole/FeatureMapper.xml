<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozstrategy.dao.userrole.FeatureDao">
    <resultMap id="featureResult" type="com.ozstrategy.model.userrole.Feature" autoMapping="true">
        <id column="id" property="id" javaType="long"/>
    </resultMap>
    <select id="listFeatures" resultMap="featureResult" parameterType="string">
        select * from ext_feature u where u.enabled=1 and u.name!='#allowAll#'
        <if test="keyword!=null and keyword!=''">and (u.name like CONCAT(CONCAT('%', #{keyword}), '%') or u.displayName like CONCAT(CONCAT('%', #{keyword}), '%'))</if>
        order by u.createDate desc
    </select>
    <select id="listFeaturesCount" resultType="java.lang.Integer" parameterType="string">
        select count(*) from ext_feature u
        where u.enabled=1 and u.name!='#allowAll#'
        <if test="keyword!=null and keyword!=''">and (u.name like CONCAT(CONCAT('%', #{keyword}), '%') or u.displayName like CONCAT(CONCAT('%', #{keyword}), '%'))</if>
    </select>
    <select id="getFeatureByName" resultMap="featureResult" parameterType="java.lang.String">
        select * from ext_feature r where r.enabled=1 and r.name=#{name} and r.enabled=1 
    </select>
    <select id="getFeatureById" resultMap="featureResult" parameterType="java.lang.Long">
        select * from ext_feature r where r.enabled=1 and r.id=#{id}
    </select>
    <select id="getFeaturesByRoleId" resultMap="featureResult" parameterType="java.lang.Long">
        select r.* from ext_feature r join ext_rolefeature rf on r.id=rf.roleId where rf.roleId=#{roleId} and r.enabled=1 
    </select>
    <select id="getFeaturesByUsername" resultMap="featureResult" parameterType="string">
        select ff.*,u.username from (select f.*,rf.roleId from ext_feature f join ext_rolefeature rf on f.id=rf.featureId) ff join ext_user u on u.defaultRoleId=ff.roleId WHERE u.username=#{username} and ff.enabled=1 
    </select>
    <select id="getFeaturesByUserId" resultMap="featureResult" parameterType="string">
        select ff.*,u.username from (select f.*,rf.roleId from ext_feature f join ext_rolefeature rf on f.id=rf.featureId) ff join ext_user u on u.defaultRoleId=ff.roleId WHERE u.id=#{id} and ff.enabled=1  
    </select>
    
    <insert id="save" flushCache="true" parameterType="com.ozstrategy.model.userrole.Feature">
        <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO ext_feature
        (id,enabled,criteria,description,name,createDate,displayName,lastUpdateDate)
        VALUES (#{id},#{enabled},#{criteria},#{description},#{name},#{createDate},#{displayName},#{lastUpdateDate})
    </insert>
    <update id="update" parameterType="com.ozstrategy.model.userrole.Feature" flushCache="true">
        UPDATE ext_feature
        SET enabled=#{enabled},criteria=#{criteria},description=#{description},name=#{name},createDate=#{createDate},displayName=#{displayName},lastUpdateDate=#{lastUpdateDate}
        WHERE (id=#{id})
    </update>
    <delete id="delete" parameterType="com.ozstrategy.model.userrole.Feature" flushCache="true">
      DELETE FROM ext_feature
      WHERE (id=#{id})
    </delete>
    
    
    
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ozstrategy.dao.userrole.UserDao">
    <!--<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->
    <resultMap id="userResult" type="com.ozstrategy.model.userrole.User" autoMapping="true">
        <id property="id" column="id"/>
        <association property="project" column="projectId" select="com.ozstrategy.dao.project.ProjectDao.getProjectById"/>
        <collection property="roles" column="id" select="com.ozstrategy.dao.userrole.RoleDao.getRoleByUserId" fetchType="lazy"/>
    </resultMap>
    
    <select id="listUsers" resultMap="userResult" parameterType="Map">
        select u.* from ext_user u where u.projectId=#{projectId}
        <if test="keyword!=null and keyword!=''">and (u.username like CONCAT(CONCAT('%', #{keyword}), '%') or u.nickName like CONCAT(CONCAT('%', #{keyword}), '%'))</if>
        order by u.createDate desc
    </select>
    <select id="listUsersCount" resultType="java.lang.Integer" parameterType="Map">
        select count(id) from ext_user u where u.projectId=#{projectId}
        <if test="keyword!=null and keyword!=''">and (u.username like CONCAT(CONCAT('%', #{keyword}), '%') or u.nickName like CONCAT(CONCAT('%', #{keyword}), '%'))</if>
    </select>
    
    <select id="getUserById" parameterType="long" resultMap="userResult">
        select u.* from ext_user u where u.id=#{id} 
    </select>
    <select id="getUserByUsername" parameterType="Map" resultMap="userResult">
        <choose>
            <when test="projectId==null">
                select u.* from ext_user u where u.username=#{username} and projectId is null
            </when>
            <otherwise>
                select u.* from ext_user u where u.username=#{username} and u.projectId=#{projectId}
            </otherwise>
        </choose>
    </select>
    
    <select id="getUserCountByProjectId" parameterType="long" resultType="int">
        SELECT COUNT(id) from ext_user u where u.projectId=#{projectId}
    </select>
    <select id="getUserByRoleId" parameterType="long" resultMap="userResult">
          select * from ext_user u JOIN ext_userrole ur on u.id=ur.userId where ur.roleId=#{roleId}
    </select>
    <select id="getUserByNickName" parameterType="Map" resultMap="userResult">
          select u.* from ext_user u where u.projectId=#{projectId} and u.nickName=#{nickName} 
    </select>
    <insert id="save" parameterType="com.ozstrategy.model.userrole.User" flushCache="true">
        <selectKey keyColumn="id" keyProperty="id" resultType="java.lang.Long">
            select LAST_INSERT_ID()
        </selectKey>
        INSERT INTO ext_user
        (id,enabled,lastName,manager,projectId,accountExpired,password,accountLocked,lastUpdateDate,version,username,phoneNumber,email,nickName,authentication,userNo,credentialsExpired,gender,createDate,firstName,mobile)
        VALUES (#{id},#{enabled},#{lastName},#{manager},#{project.id},#{accountExpired},#{password},#{accountLocked},#{lastUpdateDate},#{version},#{username},#{phoneNumber},#{email},#{nickName},#{authentication},#{userNo},#{credentialsExpired},#{gender},#{createDate},#{firstName},#{mobile})
    </insert>
    <update id="update" parameterType="com.ozstrategy.model.userrole.User" flushCache="true">
        UPDATE ext_user
        SET enabled=#{enabled},lastName=#{lastName},manager=#{manager},projectId=#{project.id},accountExpired=#{accountExpired},password=#{password},accountLocked=#{accountLocked},lastUpdateDate=#{lastUpdateDate},version=#{version},username=#{username},phoneNumber=#{phoneNumber},email=#{email},nickName=#{nickName},authentication=#{authentication},userNo=#{userNo},credentialsExpired=#{credentialsExpired},gender=#{gender},createDate=#{createDate},firstName=#{firstName},mobile=#{mobile}
        WHERE (id=#{id})
    </update>
    <delete id="delete" parameterType="com.ozstrategy.model.userrole.User" flushCache="true">
      DELETE FROM ext_user
      WHERE (id=#{id})
    </delete>
</mapper>